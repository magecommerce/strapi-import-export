{"version":3,"file":"App-DZSRLMH9.js","sources":["../../admin/src/components/Header.jsx","../../admin/src/components/Preferences/Preferences.jsx","../../admin/src/components/About/About.jsx","../../admin/src/pages/HomePage.tsx","../../admin/src/pages/App.tsx"],"sourcesContent":["import { Box, Typography, Flex } from '@strapi/design-system';\nimport React from 'react';\nimport { useI18n } from '../hooks/useI18n';\n\nexport const Header = () => {\n  const { i18n } = useI18n();\n\n  return (\n    <Box padding={4} margin={2}  background=\"neutral100\">\n      <Flex \n      direction=\"column\"\n      gap=\"medium\"\n      alignItems=\"left\"\n      >\n      <Typography variant=\"alpha\" as=\"h1\">\n        {i18n('plugin.name', 'Import Export')}\n      </Typography>\n      <Typography variant=\"epsilon\" as=\"h3\">\n          {i18n(\n            'plugin.description',\n            'Import/Export data from and to your database in just few clicks'\n          )}\n        </Typography>\n      </Flex>\n    </Box>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { Box, Flex, Typography, Checkbox, SingleSelect, SingleSelectOption } from '@strapi/design-system';\nimport { range } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\n\nconst Preferences = () => {\n  const { formatMessage: i18n } = useIntl();\n\n  const { getPreferences, updatePreferences } = useLocalStorage();\n\n  const [preferences, setPreferences] = useState(() => getPreferences());\n\n  const handleUpdatePreferences = useCallback((key, value) => {\n    updatePreferences({ [key]: value });\n    setPreferences(getPreferences());\n  }, [updatePreferences, getPreferences]);\n\n  return (\n    <Box style={{ alignSelf: 'stretch' }} background=\"neutral0\" padding={8} hasRadius={true}>\n      <Flex direction=\"column\" alignItems=\"start\" gap={6}>\n        <Flex direction=\"column\" alignItems=\"start\" gap={0}>\n            <Typography variant=\"alpha\">{i18n({ id: 'plugin.page.homepage.section.preferences.title', defaultMessage: 'Default Preferences' })}</Typography>\n            <Typography variant=\"epsilon\">{i18n({ id: 'plugin.page.homepage.section.preferences.description', defaultMessage: 'Configure the default export behavior, so you don\\'t have to set it every time you export.' })}</Typography>\n        </Flex>\n\n        <Box>\n          <Flex direction=\"column\" alignItems=\"start\" gap={4}>\n            <Flex justifyContent=\"space-between\">\n              <Checkbox \n                checked={preferences.applyFilters} \n                onCheckedChange={(value) => handleUpdatePreferences('applyFilters', value)}\n              >\n                <Typography>{i18n({ id: 'plugin.export.apply-filters-and-sort', defaultMessage: 'Apply filters and sort to exported data' })}</Typography>\n              </Checkbox>\n            </Flex>\n            <Flex direction=\"column\" gap={2}>\n              <Typography fontWeight=\"bold\" textColor=\"neutral800\" as=\"h2\">{i18n({ id: 'plugin.export.deepness', defaultMessage: 'Deepness' })}</Typography>\n              <SingleSelect\n                label={i18n({ id: 'plugin.export.deepness', defaultMessage: 'Deepness' })}\n                placeholder={i18n({ id: 'plugin.export.deepness', defaultMessage: 'Deepness' })}\n                value={preferences.deepness}\n                onChange={(value) => handleUpdatePreferences('deepness', value)}\n              >\n                {range(1, 21).map((deepness) => (\n                  <SingleSelectOption key={deepness} value={deepness.toString()}>\n                    {deepness}\n                  </SingleSelectOption>\n                ))}\n              </SingleSelect>\n            </Flex>\n          </Flex>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default React.memo(Preferences);","import React from 'react';\nimport { Box, Flex, Typography, Link } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nconst About = () => {\n  const { formatMessage: i18n } = useIntl();\n\n  return (\n    <Box style={{ alignSelf: 'stretch' }} background=\"neutral0\" padding={8} marginTop={6} hasRadius={true}>\n      <Flex direction=\"column\" alignItems=\"start\" gap={6}>\n        <Flex direction=\"column\" alignItems=\"start\" gap={0}>\n          <Typography variant=\"beta\">{i18n({ id: 'plugin.page.about.title', defaultMessage: 'About' })}</Typography>\n        </Flex>\n\n        <Box>\n          <Flex direction=\"column\" alignItems=\"start\" gap={4}>\n          <Flex direction=\"column\" alignItems=\"start\" gap={2}>\n                <Typography variant=\"delta\">Strapi 5 Version</Typography>\n                <Typography>\n                    {i18n({\n                        id: 'plugin.page.about.strapi5.description',\n                        defaultMessage: 'This is a plugin made by Jerry. agency.'\n                    })}\n                </Typography>\n                <Flex direction=\"row\" gap={4}>\n                    <Link href=\"https://xev.agency\" isExternal>\n                        Xev. Website\n                    </Link>\n                </Flex>\n            </Flex>\n          </Flex>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default React.memo(About);\n","//@ts-nocheck\nimport { Box, Checkbox, Flex, Link, Option, Select, Typography, Modal, Button } from '@strapi/design-system';\nimport { Download } from '@strapi/icons';\n\nimport React, { memo, useState } from 'react';\nimport { Page } from '@strapi/strapi/admin';\nimport { pluginPermissions } from '../permissions';\nimport { Main } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { Header } from '../components/Header';\nimport { ImportModal } from '../components/ImportModal/ImportModal';\nimport { ExportModalContent, useExportModal, ExportModalFooter }  from '../components/ExportModal/ExportModal';\nimport Preferences from '../components/Preferences/Preferences';\nimport About from '../components/About/About';\nimport { getTranslation } from '../utils/getTranslation';\nimport { useI18n } from '../hooks/useI18n';\nimport { dataFormats } from '../utils/dataFormats';\n\nconst HomePage = () => {\n  const { formatMessage } = useIntl();\n  const { i18n } = useI18n();\n\n\n  const state = useExportModal({ unavailableOptions: ['exportPluginsContentTypes'] });\n\n\n\n\n\n\n  return (\n    <>\n    {/* mango */}\n      <Main>\n        <Box padding={6} paddingTop={3}>\n          <Header />\n          <Page.Protect permissions={pluginPermissions.main}>\n            <Box\n              style={{ alignSelf: 'stretch' }}\n              background=\"neutral0\"\n              padding={8}\n              margin={6}\n              hasRadius={true}\n            >\n              <Flex direction=\"column\" alignItems=\"start\" gap={6}>\n                <Flex direction=\"column\" alignItems=\"start\" gap={0}>  \n                  <Typography variant=\"alpha\">\n                    {i18n('plugin.page.homepage.section.quick-actions.title', 'Global Actions')}\n                  </Typography>\n                  <Typography variant=\"epsilon\">\n                    {i18n('plugin.page.homepage.section.quick-actions.description', 'Import and export data from all your content types at once.')}\n                  </Typography>\n                </Flex>\n                <Box>\n                  <Flex direction=\"column\" alignItems=\"start\" gap={4}>\n                    <Flex gap={4}>\n                      <ImportModal />\n                      <Modal.Root onOpenChange={state.handleOpenChange}>\n                        <Modal.Trigger>\n                          <Button startIcon={<Download />}>{i18n('plugin.cta.export', 'Export')}</Button>\n                        </Modal.Trigger>\n                        {state.isOpen && (\n                        <Modal.Content>\n                          <Modal.Header>\n                            <Modal.Title>\n                              <Flex gap={2}>\n                                <Typography fontWeight=\"bold\" textColor=\"neutral800\" tag=\"h2\" id=\"title\">\n                                  {i18n('plugin.cta.export', 'Export')}\n                                </Typography>\n                                <Typography textColor=\"neutral800\" tag=\"h2\" id=\"title\">\n                                  {state.isSlugWholeDb ? i18n('plugin.export.whole-database', 'Whole database') : state.slug}\n                                </Typography>\n                              </Flex>\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <ExportModalContent state={state} />\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <ExportModalFooter state={state} />\n                          </Modal.Footer>\n                        </Modal.Content>\n                      )}\n                      </Modal.Root>\n                    </Flex>\n                  </Flex>\n                </Box>\n              </Flex>\n            </Box>\n            <Box padding={6} paddingTop={3} paddingBottom={0}>\n              <Preferences />\n            </Box>\n            <Box padding={6} paddingTop={3} paddingBottom={0}>\n              <About />\n            </Box>\n          </Page.Protect>\n        </Box>\n      </Main>\n    </>\n  );\n};\n\nexport default memo(HomePage);\n","import { Page } from '@strapi/strapi/admin';\nimport { Routes, Route } from 'react-router-dom';\n\nimport HomePage from './HomePage';\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route index element={<HomePage />} />\n      <Route path=\"*\" element={<Page.Error />} />\n    </Routes>\n  );\n};\n\nexport { App };\n"],"names":["useI18n","Box","jsxs","Flex","jsx","Typography","useIntl","useLocalStorage","useState","useCallback","Checkbox","SingleSelect","range","SingleSelectOption","React","Link","useExportModal","Fragment","Main","Page","pluginPermissions","ImportModal","Modal","Button","Download","ExportModalContent","ExportModalFooter","Preferences","About","memo","Routes","Route","HomePage"],"mappings":"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"}